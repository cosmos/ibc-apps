// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v9/packetforward/types (interfaces: TransferKeeper)
//
// Generated by this command:
//
//	mockgen -package=mock -destination=./test/mock/transfer_keeper.go github.com/cosmos/ibc-apps/middleware/packet-forward-middleware/v9/packetforward/types TransferKeeper
//

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	bytes "github.com/cometbft/cometbft/libs/bytes"
	types "github.com/cosmos/cosmos-sdk/types"
	types0 "github.com/cosmos/ibc-go/v9/modules/apps/transfer/types"
	gomock "go.uber.org/mock/gomock"
)

// MockTransferKeeper is a mock of TransferKeeper interface.
type MockTransferKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockTransferKeeperMockRecorder
}

// MockTransferKeeperMockRecorder is the mock recorder for MockTransferKeeper.
type MockTransferKeeperMockRecorder struct {
	mock *MockTransferKeeper
}

// NewMockTransferKeeper creates a new mock instance.
func NewMockTransferKeeper(ctrl *gomock.Controller) *MockTransferKeeper {
	mock := &MockTransferKeeper{ctrl: ctrl}
	mock.recorder = &MockTransferKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransferKeeper) EXPECT() *MockTransferKeeperMockRecorder {
	return m.recorder
}

// GetDenom mocks base method.
func (m *MockTransferKeeper) GetDenom(arg0 context.Context, arg1 bytes.HexBytes) (types0.Denom, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDenom", arg0, arg1)
	ret0, _ := ret[0].(types0.Denom)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// GetDenom indicates an expected call of GetDenom.
func (mr *MockTransferKeeperMockRecorder) GetDenom(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDenom", reflect.TypeOf((*MockTransferKeeper)(nil).GetDenom), arg0, arg1)
}

// GetTotalEscrowForDenom mocks base method.
func (m *MockTransferKeeper) GetTotalEscrowForDenom(arg0 context.Context, arg1 string) types.Coin {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalEscrowForDenom", arg0, arg1)
	ret0, _ := ret[0].(types.Coin)
	return ret0
}

// GetTotalEscrowForDenom indicates an expected call of GetTotalEscrowForDenom.
func (mr *MockTransferKeeperMockRecorder) GetTotalEscrowForDenom(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalEscrowForDenom", reflect.TypeOf((*MockTransferKeeper)(nil).GetTotalEscrowForDenom), arg0, arg1)
}

// SetTotalEscrowForDenom mocks base method.
func (m *MockTransferKeeper) SetTotalEscrowForDenom(arg0 context.Context, arg1 types.Coin) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTotalEscrowForDenom", arg0, arg1)
}

// SetTotalEscrowForDenom indicates an expected call of SetTotalEscrowForDenom.
func (mr *MockTransferKeeperMockRecorder) SetTotalEscrowForDenom(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTotalEscrowForDenom", reflect.TypeOf((*MockTransferKeeper)(nil).SetTotalEscrowForDenom), arg0, arg1)
}

// Transfer mocks base method.
func (m *MockTransferKeeper) Transfer(arg0 context.Context, arg1 *types0.MsgTransfer) (*types0.MsgTransferResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Transfer", arg0, arg1)
	ret0, _ := ret[0].(*types0.MsgTransferResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Transfer indicates an expected call of Transfer.
func (mr *MockTransferKeeperMockRecorder) Transfer(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Transfer", reflect.TypeOf((*MockTransferKeeper)(nil).Transfer), arg0, arg1)
}
